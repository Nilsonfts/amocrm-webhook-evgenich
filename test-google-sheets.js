const { google } = require('googleapis');
const fs = require('fs');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets...');

try {
    // –ß–∏—Ç–∞–µ–º credentials
    const credentials = JSON.parse(fs.readFileSync('google-credentials.json', 'utf8'));
    console.log('‚úÖ Credentials –∑–∞–≥—Ä—É–∂–µ–Ω—ã');

    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –≤ private_key
    const fixedCredentials = {
        ...credentials,
        private_key: credentials.private_key.replace(/\\n/g, '\n')
    };

    console.log('üîë –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥ —Å –ø–æ–ª–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º credentials');

    // –°–æ–∑–¥–∞–µ–º JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –∏—Å–ø–æ–ª—å–∑—É—è –≤–µ—Å—å –æ–±—ä–µ–∫—Ç credentials
    const auth = google.auth.fromJSON(fixedCredentials);
    auth.scopes = ['https://www.googleapis.com/auth/spreadsheets'];
    
    console.log('‚úÖ Auth —Å–æ–∑–¥–∞–Ω');
    
    // –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
    auth.authorize((err, tokens) => {
        if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', err.message);
            return;
        }
        
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
        
        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Sheets API
        const sheets = google.sheets({ version: 'v4', auth: auth });
        const spreadsheetId = process.env.GOOGLE_SHEET_ID || '1tD89CZMI8KqaHBx0gmGsHpc9eKYvpuk3OnCOpDYMDdE';
        
        console.log('üìä Spreadsheet ID:', spreadsheetId);
        
        // –ü—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
        const testData = ['TEST-' + Date.now(), '–¢–µ—Å—Ç–æ–≤–∞—è —Å–¥–µ–ª–∫–∞', '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç', '–¢–µ—Å—Ç–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä'];
        
        sheets.spreadsheets.values.append({
            spreadsheetId: spreadsheetId,
            range: 'A:AZ',
            valueInputOption: 'RAW',
            resource: {
                values: [testData]
            }
        }, (err, result) => {
            if (err) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', err.message);
                if (err.code === 403) {
                    console.error('üîê –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ');
                }
                return;
            }
            
            console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
            console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:', result.data);
        });
    });
    
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
}
