const axios = require('axios');
require('dotenv').config();

// –£–±–∏—Ä–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç date-fns –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã

// --- –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ .env ---
const AMO_DOMAIN = process.env.AMO_DOMAIN;
const AMO_TOKEN = process.env.AMO_TOKEN;
// ------------------------------------

// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–≥—Ä—É–∑–∫–∏ ---
// –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è (–≤—Å–µ —ç—Ç–∞–ø—ã)
console.log('üìÖ –§–ò–õ–¨–¢–†–´:');
console.log('   üìç –ë–∞—Ä (deal): –ï–í–ì –°–ü–ë');
console.log('   üìä –≠—Ç–∞–ø—ã: –í–°–ï –≠–¢–ê–ü–´');
console.log('   ‚è∞ –ü–µ—Ä–∏–æ–¥: –ó–ê –í–°–ï –í–†–ï–ú–Ø');
// --------------------------

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏–π –≤–æ—Ä–æ–Ω–æ–∫ –∏ —Å—Ç–∞—Ç—É—Å–æ–≤
const pipelinesData = {};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π –≤—Å–µ—Ö –≤–æ—Ä–æ–Ω–æ–∫ –∏ —Å—Ç–∞—Ç—É—Å–æ–≤
 */
async function fetchPipelines() {
    console.log('–ó–∞–≥—Ä—É–∂–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ—Ä–æ–Ω–∫–∞—Ö –∏ —Å—Ç–∞—Ç—É—Å–∞—Ö...');
    try {
        const response = await axios.get(`https://${AMO_DOMAIN}/api/v4/leads/pipelines`, {
            headers: { 'Authorization': `Bearer ${AMO_TOKEN}` }
        });

        response.data._embedded.pipelines.forEach(pipeline => {
            pipelinesData[pipeline.id] = {
                name: pipeline.name,
                statuses: {}
            };
            pipeline._embedded.statuses.forEach(status => {
                pipelinesData[pipeline.id].statuses[status.id] = status.name;
            });
        });
        console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ—Ä–æ–Ω–∫–∞—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
    } catch (error) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ—Ä–æ–Ω–∫–∞—Ö:', error.message);
        throw error;
    }
}


/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –∏ –∑–∞–ø–∏—Å–∏ —Å–¥–µ–ª–æ–∫
 */
async function exportAndSaveDeals() {
    try {
        await fetchPipelines(); // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤–æ—Ä–æ–Ω–∫–∞—Ö

        let allDeals = [];
        let page = 1;
        // –£–±–∏—Ä–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ - –±–µ—Ä–µ–º –í–°–ï —Å–¥–µ–ª–∫–∏ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
        let apiUrl = `https://${AMO_DOMAIN}/api/v4/leads?with=custom_fields_values,contacts&limit=250`;
        
        console.log('\nüöÄ –ù–∞—á–∏–Ω–∞—é –≤—ã–≥—Ä—É–∑–∫—É –í–°–ï–• —Å–¥–µ–ª–æ–∫ –∏–∑ amoCRM...');
        console.log('üéØ –ò—â–µ–º —Å–¥–µ–ª–∫–∏ —Å "–ë–∞—Ä (deal)" = "–ï–í–ì –°–ü–ë" –≤–æ –í–°–ï–• —ç—Ç–∞–ø–∞—Ö');
        

        while (apiUrl) {
            console.log(`- –ó–∞–ø—Ä–∞—à–∏–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É ‚Ññ${page}...`);
            const response = await axios.get(apiUrl, {
                headers: { 'Authorization': `Bearer ${AMO_TOKEN}` }
            });

            if (response.data && response.data._embedded && response.data._embedded.leads) {
                const deals = response.data._embedded.leads;
                allDeals.push(...deals);
                console.log(`  ...–ø–æ–ª—É—á–µ–Ω–æ ${deals.length} —Å–¥–µ–ª–æ–∫.`);
            }

            apiUrl = response.data._links && response.data._links.next ? response.data._links.next.href : null;
            page++;
        }

        console.log('\n--- –í–´–ì–†–£–ó–ö–ê –ò–ó AMO –ó–ê–í–ï–†–®–ï–ù–ê ---');
        console.log(`–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —Å–¥–µ–ª–æ–∫: ${allDeals.length}`);

        if (allDeals.length === 0) {
            console.log('–ù–æ–≤—ã—Ö —Å–¥–µ–ª–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç.');
            return;
        }

        console.log('\n–ù–∞—á–∏–Ω–∞—é –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏...');
        
        let evgDealsCount = 0;
        let totalDealsChecked = 0;
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–∞–∂–¥—É—é —Å–¥–µ–ª–∫—É –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        for (const deal of allDeals) {
            totalDealsChecked++;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —Å–¥–µ–ª–∫–∏ –ø–æ–ª–µ "–ë–∞—Ä (deal)" —Å –∑–Ω–∞—á–µ–Ω–∏–µ–º "–ï–í–ì –°–ü–ë"
            let isEvgDeal = false;
            let barValue = '';
            
            if (deal.custom_fields_values) {
                const barField = deal.custom_fields_values.find(field => 
                    field.field_name === '–ë–∞—Ä (deal)'
                );
                
                if (barField && barField.values && barField.values[0]) {
                    barValue = barField.values[0].value;
                    // –¢–û–ß–ù–û–ï —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å "–ï–í–ì –°–ü–ë"
                    if (barValue === '–ï–í–ì –°–ü–ë') {
                        isEvgDeal = true;
                        evgDealsCount++;
                    }
                }
            }
            
            if (isEvgDeal) {
                const contact = deal._embedded && deal._embedded.contacts && deal._embedded.contacts[0];
                const pipelineInfo = pipelinesData[deal.pipeline_id] || { name: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', statuses: {} };
                const statusName = pipelineInfo.statuses[deal.status_id] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
                
                const rowData = {
                    // –í–ê–ñ–ù–û: –≠—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω—ã –¢–û–ß–ù–û —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –≤ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü–µ!
                    '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è': new Date(deal.created_at * 1000).toLocaleString('ru-RU'),
                    '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏': deal.name,
                    '–ë—é–¥–∂–µ—Ç': deal.price,
                    '–í–æ—Ä–æ–Ω–∫–∞': pipelineInfo.name,
                    '–°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏': statusName,
                    // –ü–æ–ª—è –Ω–∏–∂–µ –ø–æ–∫–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω—è—é—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ —Ç—Ä–µ–±—É—é—Ç –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
                    '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π': '', 
                    '–ò–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞': contact ? contact.name : '',
                    '–¢–µ–ª–µ—Ñ–æ–Ω': '', 
                    'Email': '',
                };
                
                // –í—Ä–µ–º–µ–Ω–Ω–æ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –≤–º–µ—Å—Ç–æ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets
                console.log(`‚úÖ –ù–ê–ô–î–ï–ù–ê –ï–í–ì –°–ü–ë! –°–¥–µ–ª–∫–∞ ${deal.id}: "${deal.name}"`);
                console.log(`   üìç –ë–∞—Ä: ${barValue}`);
                console.log(`   üìÖ –°–æ–∑–¥–∞–Ω–æ: ${rowData['–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è']}`);
                console.log(`   üí∞ –ë—é–¥–∂–µ—Ç: ${rowData['–ë—é–¥–∂–µ—Ç']} ‚ÇΩ`);
                console.log(`   üè¢ –í–æ—Ä–æ–Ω–∫–∞: ${rowData['–í–æ—Ä–æ–Ω–∫–∞']}`);
                console.log(`   üìä –≠—Ç–∞–ø: ${rowData['–°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏']}`);
                console.log('');
                
                // –ö–æ–≥–¥–∞ Google Sheets API –±—É–¥–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω, —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É:
                // await appendRow(rowData);
            }
        }

        console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–û–ò–°–ö–ê –ï–í–ì –°–ü–ë:');
        console.log(`üìä –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${totalDealsChecked}`);
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–¥–µ–ª–æ–∫ "–ï–í–ì –°–ü–ë": ${evgDealsCount}`);
        console.log(`üìà –ü—Ä–æ—Ü–µ–Ω—Ç –ï–í–ì –°–ü–ë: ${Math.round((evgDealsCount/totalDealsChecked)*100)}%`);
        console.log('\nüîç –ù–ê–°–¢–†–û–ô–ö–ò –§–ò–õ–¨–¢–†–ê:');
        console.log('   üìç –ü–æ–ª–µ: "–ë–∞—Ä (deal)" = "–ï–í–ì –°–ü–ë"');
        console.log('   üìä –≠—Ç–∞–ø—ã: –í–°–ï –≠–¢–ê–ü–´ –≤–æ—Ä–æ–Ω–∫–∏');
        console.log('   ‚è∞ –ü–µ—Ä–∏–æ–¥: –ó–ê –í–°–ï –í–†–ï–ú–Ø');

    } catch (error) {
        if (error.response) {
            console.error('\n–û–®–ò–ë–ö–ê! –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:');
            console.error(`–°—Ç–∞—Ç—É—Å: ${error.response.status}`);
            console.error('–î–∞–Ω–Ω—ã–µ: ', error.response.data);
            if (error.response.status === 401) {
                console.error('\n–í–µ—Ä–æ—è—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞: –í–∞—à —Ç–æ–∫–µ–Ω AMO_TOKEN —É—Å—Ç–∞—Ä–µ–ª. –ï–≥–æ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å.');
            }
        } else {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
exportAndSaveDeals();
