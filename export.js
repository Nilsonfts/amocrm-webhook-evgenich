const axios = require('axios');
require('dotenv').config();

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤–∞—à –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google –¢–∞–±–ª–∏—Ü–∞–º–∏
// –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª `google-sheets-api.js` –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ
const { appendRow } = require('./google-sheets-api'); 
const { format } = require('date-fns');

// --- –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ .env ---
const AMO_DOMAIN = process.env.AMO_DOMAIN;
const AMO_TOKEN = process.env.AMO_TOKEN;
// ------------------------------------

// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–≥—Ä—É–∑–∫–∏ ---
// –° 1 –∞–ø—Ä–µ–ª—è 2025 –≥–æ–¥–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è)
const startDate = new Date('2025-04-01'); // –° 1 –∞–ø—Ä–µ–ª—è 2025
startDate.setHours(0, 0, 0, 0);
const startTimestamp = Math.floor(startDate.getTime() / 1000);
console.log(`üìÖ –í—ã–≥—Ä—É–∑–∫–∞ –° 1 –ê–ü–†–ï–õ–Ø 2025 —Å ${startDate.toLocaleDateString('ru-RU')}`);
// --------------------------

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏–π –≤–æ—Ä–æ–Ω–æ–∫ –∏ —Å—Ç–∞—Ç—É—Å–æ–≤
const pipelinesData = {};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π –≤—Å–µ—Ö –≤–æ—Ä–æ–Ω–æ–∫ –∏ —Å—Ç–∞—Ç—É—Å–æ–≤
 */
async function fetchPipelines() {
    console.log('–ó–∞–≥—Ä—É–∂–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ—Ä–æ–Ω–∫–∞—Ö –∏ —Å—Ç–∞—Ç—É—Å–∞—Ö...');
    try {
        const response = await axios.get(`https://${AMO_DOMAIN}/api/v4/leads/pipelines`, {
            headers: { 'Authorization': `Bearer ${AMO_TOKEN}` }
        });

        response.data._embedded.pipelines.forEach(pipeline => {
            pipelinesData[pipeline.id] = {
                name: pipeline.name,
                statuses: {}
            };
            pipeline._embedded.statuses.forEach(status => {
                pipelinesData[pipeline.id].statuses[status.id] = status.name;
            });
        });
        console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ—Ä–æ–Ω–∫–∞—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
    } catch (error) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ—Ä–æ–Ω–∫–∞—Ö:', error.message);
        throw error;
    }
}


/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –∏ –∑–∞–ø–∏—Å–∏ —Å–¥–µ–ª–æ–∫
 */
async function exportAndSaveDeals() {
    try {
        await fetchPipelines(); // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤–æ—Ä–æ–Ω–∫–∞—Ö

        let allDeals = [];
        let page = 1;
        let apiUrl = `https://${AMO_DOMAIN}/api/v4/leads?filter[created_at][from]=${startTimestamp}&with=contacts&limit=250`;
        
        console.log('\n–ù–∞—á–∏–Ω–∞—é –≤—ã–≥—Ä—É–∑–∫—É —Å–¥–µ–ª–æ–∫ –∏–∑ amoCRM...');

        while (apiUrl) {
            console.log(`- –ó–∞–ø—Ä–∞—à–∏–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É ‚Ññ${page}...`);
            const response = await axios.get(apiUrl, {
                headers: { 'Authorization': `Bearer ${AMO_TOKEN}` }
            });

            if (response.data && response.data._embedded && response.data._embedded.leads) {
                const deals = response.data._embedded.leads;
                allDeals.push(...deals);
                console.log(`  ...–ø–æ–ª—É—á–µ–Ω–æ ${deals.length} —Å–¥–µ–ª–æ–∫.`);
            }

            apiUrl = response.data._links && response.data._links.next ? response.data._links.next.href : null;
            page++;
        }

        console.log('\n--- –í–´–ì–†–£–ó–ö–ê –ò–ó AMO –ó–ê–í–ï–†–®–ï–ù–ê ---');
        console.log(`–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —Å–¥–µ–ª–æ–∫: ${allDeals.length}`);

        if (allDeals.length === 0) {
            console.log('–ù–æ–≤—ã—Ö —Å–¥–µ–ª–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç.');
            return;
        }

        console.log('\n–ù–∞—á–∏–Ω–∞—é –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ Google –¢–∞–±–ª–∏—Ü—É (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)...');
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–∞–∂–¥—É—é —Å–¥–µ–ª–∫—É –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
        for (const deal of allDeals) {
            const contact = deal._embedded && deal._embedded.contacts && deal._embedded.contacts[0];
            const pipelineInfo = pipelinesData[deal.pipeline_id] || { name: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', statuses: {} };
            const statusName = pipelineInfo.statuses[deal.status_id] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
            
            const rowData = {
                // –í–ê–ñ–ù–û: –≠—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω—ã –¢–û–ß–ù–û —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –≤ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü–µ!
                '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è': format(new Date(deal.created_at * 1000), 'dd.MM.yyyy HH:mm:ss'),
                '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏': deal.name,
                '–ë—é–¥–∂–µ—Ç': deal.price,
                '–í–æ—Ä–æ–Ω–∫–∞': pipelineInfo.name,
                '–°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏': statusName,
                // –ü–æ–ª—è –Ω–∏–∂–µ –ø–æ–∫–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω—è—é—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ —Ç—Ä–µ–±—É—é—Ç –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
                '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π': '', 
                '–ò–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞': contact ? contact.name : '',
                '–¢–µ–ª–µ—Ñ–æ–Ω': '', 
                'Email': '',
            };
            
            await appendRow(rowData);
            console.log(`- –ó–∞–ø–∏—Å–∞–Ω–∞ —Å–¥–µ–ª–∫–∞ ID: ${deal.id}`);
        }

        console.log('\n--- –ó–ê–ü–ò–°–¨ –í GOOGLE –¢–ê–ë–õ–ò–¶–£ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–ê ---');

    } catch (error) {
        if (error.response) {
            console.error('\n–û–®–ò–ë–ö–ê! –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:');
            console.error(`–°—Ç–∞—Ç—É—Å: ${error.response.status}`);
            console.error('–î–∞–Ω–Ω—ã–µ: ', error.response.data);
            if (error.response.status === 401) {
                console.error('\n–í–µ—Ä–æ—è—Ç–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞: –í–∞—à —Ç–æ–∫–µ–Ω AMO_TOKEN —É—Å—Ç–∞—Ä–µ–ª. –ï–≥–æ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å.');
            }
        } else {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
exportAndSaveDeals();
