const { COLUMN_STRUCTURE } = require('./column-structure');

console.log('üß™ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏...');

// –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–ª–æ–Ω–æ–∫
console.log('üìä –í—Å–µ–≥–æ –∫–æ–ª–æ–Ω–æ–∫ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:', Object.keys(COLUMN_STRUCTURE).length);
console.log('üìù –ü–µ—Ä–≤—ã–µ 5 –∫–æ–ª–æ–Ω–æ–∫:', Object.keys(COLUMN_STRUCTURE).slice(0, 5));

// –°–æ–∑–¥–∞–¥–∏–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–æ–¥–µ
const testData = [];
const headers = Object.keys(COLUMN_STRUCTURE);

console.log(`üìä –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å ${headers.length} –∫–æ–ª–æ–Ω–∫–∞–º–∏`);

headers.forEach((header, index) => {
  switch (header) {
    case 'ID':
      testData.push('TEST-12345');
      break;
    case '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏':
      testData.push('üß™ –¢–µ—Å—Ç–æ–≤–∞—è —Å–¥–µ–ª–∫–∞ - ' + new Date().toLocaleString('ru-RU'));
      break;
    case '–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–∞–∫—Ç':
      testData.push('–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç');
      break;
    case '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π':
      testData.push('–¢–µ—Å—Ç–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä');
      break;
    case '–≠—Ç–∞–ø —Å–¥–µ–ª–∫–∏':
      testData.push('–¢–µ—Å—Ç–æ–≤—ã–π —ç—Ç–∞–ø');
      break;
    case '–ë—é–¥–∂–µ—Ç':
      testData.push('50000');
      break;
    case '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è':
      testData.push(new Date().toLocaleDateString('ru-RU'));
      break;
    case '–ö–µ–º —Å–æ–∑–¥–∞–Ω–∞':
      testData.push('–°–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      break;
    case '–ë–∞—Ä (deal)':
      testData.push('–†–í–ë –°–ü–ë –ì28');
      break;
    case '–î–∞—Ç–∞ –±—Ä–æ–Ω–∏':
      testData.push(new Date().toLocaleDateString('ru-RU'));
      break;
    case '–ö–æ–ª-–≤–æ –≥–æ—Å—Ç–µ–π':
      testData.push('4');
      break;
    case '–í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞':
      testData.push('19:00');
      break;
    case '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ú–û–ë':
      testData.push('–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã');
      break;
    case '–¢–∏–ø –ª–∏–¥–∞':
      testData.push('–¶–µ–ª–µ–≤–æ–π');
      break;
    case '–†–∞–±–æ—á–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω (–∫–æ–Ω—Ç–∞–∫—Ç)':
      testData.push('+7 (999) 123-45-67');
      break;
    default:
      testData.push(`–¢–µ—Å—Ç ${index + 1}`);
      break;
  }
});

console.log('üìù –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã:');
console.log('   –î–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞:', testData.length);
console.log('   –ü–µ—Ä–≤—ã–µ 10 –∑–Ω–∞—á–µ–Ω–∏–π:', testData.slice(0, 10));
console.log('   –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–Ω–∞—á–µ–Ω–∏–π:', testData.slice(-5));

console.log('‚úÖ –¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω');
